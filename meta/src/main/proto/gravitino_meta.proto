/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
syntax = "proto3";

import "google/protobuf/timestamp.proto";

option java_multiple_files = true;
option java_package = "com.datastrato.gravitino.proto";

/**
 * The version of schema definition. Schema is backward compatible within the
 * same major version. The minor version is used for schema evolution.
 */
message SchemaVersion {
  uint32 major_number = 1;
  uint32 minor_number = 2;
}

/**
 * The AuditInfo message is used to record the audit information of a resource.
 */
message AuditInfo {
  optional string creator = 1;
  optional google.protobuf.Timestamp create_time = 2;
  optional string last_modifier = 3;
  optional google.protobuf.Timestamp last_modified_time = 4;
}

/**
 * The Metalake message is used to record the Metalake information. Metalake is used track all
  the metadata of the data lake, data warehouse, and data mart.
 */
message Metalake {
  uint64 id = 1;
  string name = 2;
  optional string comment = 3;
  map<string, string> properties = 4;
  AuditInfo audit_info = 5;
  SchemaVersion version = 6;
}

message Catalog {
  enum Type {
    RELATIONAL = 0; // Catalog Type for Relational Data Structure, like db.table.
    FILESET = 1; // Catalog Type for File System (including HDFS, S3, etc.), like path/to/file.
    MESSAGING = 2; // Catalog Type for MESSAGING, like Kafka://topic.
  }

  uint64 id = 1;
  string name = 2;
  Type type = 3;
  optional string comment = 4;
  map<string, string> properties = 5;
  AuditInfo audit_info = 6;
  string provider = 7;
}

message Schema {
  uint64 id = 1;
  string name = 2;
  AuditInfo audit_info = 3;
  // These two fields will be used when the schema object is managed by Gravitino, otherwise, it
  // will be ignored.
  optional string comment = 4;
  map<string, string> properties = 5;
}

message Table {
  uint64 id = 1;
  string name = 2;
  AuditInfo audit_info = 3;
}

/**
 * The Fileset message is used to record the fileset object information. Fileset object represents
 * the non-tabular data on FS-like storage, like HDFS, S3, etc.
 */
message Fileset {
  enum Type {
    MANAGED = 0; // The storage location is managed by Gravitino. When specified, the data will be
                 // deleted when the file object is deleted.
    EXTERNAL = 1; // The storage location is managed by user. When specified, the data will not be
                  // deleted when the file object is deleted.
  }

  uint64 id = 1;
  string name = 2;
  optional string comment = 3;
  Type type = 4;
  string storage_location = 5;
  map<string, string> properties = 6;
  AuditInfo audit_info = 7;
}

message Topic {
  uint64 id = 1;
  string name = 2;
  optional string comment = 3;
  map<string, string> properties = 4;
  AuditInfo audit_info = 5;
}

message User {
  uint64 id = 1;
  string name = 2;
  repeated string role_names = 3;
  repeated uint64 role_ids = 4;
  AuditInfo audit_info = 5;
}

message Group {
  uint64 id = 1;
  string name = 2;
  repeated string role_names = 3;
  repeated uint64 role_ids = 4;
  AuditInfo audit_info = 5;
}

message SecurableObject {
  string full_name = 1;
  string type = 2;
  repeated string privilege_names = 3;
  repeated string privilege_conditions = 4;
}

message Role {
  uint64 id = 1;
  string name = 2;
  repeated SecurableObject securable_objects = 3;
  map<string, string> properties = 4;
  AuditInfo audit_info = 5;
}
