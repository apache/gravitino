{{- /*
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at
  
  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
  */}}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "gravitino.fullname" . }}
  namespace: {{ include "gravitino.namespace" . }}
  labels:
    {{- include "gravitino.labels" . | nindent 4 }}
data:
  gravitino.conf: |-
    # THE CONFIGURATION FOR Gravitino SERVER
    gravitino.server.shutdown.timeout = {{ .Values.server.shutdownTimeout }}

    # THE CONFIGURATION FOR Gravitino WEB SERVER
    gravitino.server.webserver.host = {{ .Values.webserver.host }}
    gravitino.server.webserver.httpPort = {{ .Values.webserver.httpPort }}
    gravitino.server.webserver.minThreads = {{ .Values.webserver.minThreads }}
    gravitino.server.webserver.maxThreads = {{ .Values.webserver.maxThreads }}
    gravitino.server.webserver.stopTimeout = {{ .Values.webserver.stopTimeout }}
    gravitino.server.webserver.idleTimeout = {{ .Values.webserver.idleTimeout }}
    gravitino.server.webserver.threadPoolWorkQueueSize = {{ .Values.webserver.threadPoolWorkQueueSize }}
    gravitino.server.webserver.requestHeaderSize = {{ .Values.webserver.requestHeaderSize }}
    gravitino.server.webserver.responseHeaderSize = {{ .Values.webserver.responseHeaderSize }}

    # Comma-separated list of filter class names to apply to the API.
    gravitino.server.webserver.customFilters = {{ .Values.webserver.customFilters }}

    # Comma-separated list of REST API packages to expand
    gravitino.server.rest.extensionPackages = {{ .Values.server.rest.extensionPackages }}

    # THE CONFIGURATION FOR Gravitino ENTITY STORE
    gravitino.entity.store = {{ .Values.entity.store }}
    gravitino.entity.store.maxTransactionSkewTimeMs = {{ .Values.entity.maxTransactionSkewTimeMs }}
    gravitino.entity.store.deleteAfterTimeMs = {{ (.Values.entity.deleteAfterTimeMs | default 604800000) | int }}
    gravitino.entity.store.versionRetentionCount = {{ .Values.entity.versionRetentionCount }}
    gravitino.entity.store.relational = {{ .Values.entity.relationalBackend }}
    gravitino.entity.store.relational.jdbcUrl = {{ if .Values.mysql.enabled }}jdbc:mysql://{{ .Release.Name }}-mysql:3306/{{ .Values.mysql.auth.database }}{{ else }}{{ .Values.entity.jdbcUrl }}{{ end }}
    gravitino.entity.store.relational.jdbcDriver = {{ if .Values.mysql.enabled }}com.mysql.cj.jdbc.Driver{{ else }}{{ .Values.entity.jdbcDriver }}{{ end }}
    gravitino.entity.store.relational.jdbcUser = {{ if .Values.mysql.enabled }}{{ .Values.mysql.auth.username }}{{ else }}{{ .Values.entity.jdbcUser }}{{ end }}
    gravitino.entity.store.relational.jdbcPassword = {{ if .Values.mysql.enabled }}{{ .Values.mysql.auth.password }}{{ else }}{{ .Values.entity.jdbcPassword }}{{ end }}
    gravitino.entity.store.relational.storagePath = {{ .Values.entity.storagePath }}

    # THE CONFIGURATION FOR Gravitino CATALOG
    gravitino.catalog.cache.evictionIntervalMs = {{ if .Values.catalog.evictionIntervalMs }}{{ .Values.catalog.evictionIntervalMs }}{{ else }}3600000{{ end }}
    gravitino.catalog.classloader.isolated = {{ .Values.catalog.classloader.isolated }}
    
    # THE CONFIGURATION FOR authorization
    gravitino.authorization.enable = {{ .Values.authorization.enable }}
    gravitino.authorization.serviceAdmins = {{ .Values.authorization.serviceAdmins }}
    gravitino.authenticators = {{ .Values.authenticators }}
    gravitino.authenticator.oauth.serviceAudience = {{ .Values.authenticator.oauth.serviceAudience }}
    gravitino.authenticator.oauth.defaultSignKey = {{ .Values.authenticator.oauth.defaultSignKey }}
    gravitino.authenticator.oauth.serverUri = {{ .Values.authenticator.oauth.serverUri }}
    gravitino.authenticator.oauth.tokenPath = {{ .Values.authenticator.oauth.tokenPath }}

    # THE CONFIGURATION FOR AUXILIARY SERVICE
    gravitino.auxService.names = {{ .Values.auxService.names }}
    gravitino.iceberg-rest.classpath = {{ .Values.icebergRest.classpath }}
    gravitino.iceberg-rest.host = {{ .Values.icebergRest.host }}
    gravitino.iceberg-rest.httpPort = {{ .Values.icebergRest.httpPort }}
    gravitino.iceberg-rest.catalog-backend = {{ .Values.icebergRest.catalogBackend }}
    gravitino.iceberg-rest.warehouse = {{ .Values.icebergRest.warehouse }}

    # Audit log configuration
    gravitino.audit.enabled = {{ .Values.audit.enabled }}
    gravitino.audit.writer.className = {{ .Values.audit.writer.className }}
    gravitino.audit.formatter.className = {{ .Values.audit.formatter.className }}
    gravitino.audit.writer.file.fileName = {{ .Values.audit.writer.file.fileName }}
    gravitino.audit.writer.file.flushIntervalSecs = {{ .Values.audit.writer.file.flushIntervalSecs }}
    gravitino.audit.writer.file.append = {{ .Values.audit.writer.file.append }}
    
    #Metrics configuration
    gravitino.metrics.timeSlidingWindowSecs	= {{ .Values.metrics.timeSlidingWindowSecs }}

    {{- if .Values.visibleConfigs }}
    gravitino.server.visibleConfigs = {{ .Values.visibleConfigs }}
    {{- range $key, $val := .Values.visibleConfigsItems }}
    {{ $key }} = {{ tpl $val $ }}
    {{- end }}
    {{- end }}
  init.sh: |-
    {{- tpl (.Files.Get "resources/config/init.sh") . | nindent 4 }}