#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# THE CONFIGURATION FOR Gravitino SERVER
gravitino.server.shutdown.timeout = {{ .Values.server.shutdownTimeout | default 3000 }}

# THE CONFIGURATION FOR Gravitino WEB SERVER
gravitino.server.webserver.host = {{ .Values.webserver.host | default "0.0.0.0" }}
gravitino.server.webserver.httpPort = {{ .Values.webserver.httpPort | default 8090 }}
gravitino.server.webserver.minThreads = {{ .Values.webserver.minThreads | default 24 }}
gravitino.server.webserver.maxThreads = {{ .Values.webserver.maxThreads | default 200 }}
gravitino.server.webserver.stopTimeout = {{ .Values.webserver.stopTimeout | default 30000 }}
gravitino.server.webserver.idleTimeout = {{ .Values.webserver.idleTimeout | default 30000 }}
gravitino.server.webserver.threadPoolWorkQueueSize = {{ .Values.webserver.threadPoolWorkQueueSize | default 100 }}
gravitino.server.webserver.requestHeaderSize = {{ .Values.webserver.requestHeaderSize | default 131072 }}
gravitino.server.webserver.responseHeaderSize = {{ .Values.webserver.responseHeaderSize | default 131072 }}

# Comma-separated list of filter class names to apply to the API.
gravitino.server.webserver.customFilters = {{ .Values.webserver.customFilters }}

# Comma-separated list of REST API packages to expand
gravitino.server.rest.extensionPackages = {{ .Values.server.rest.extensionPackages }}

# THE CONFIGURATION FOR Gravitino ENTITY STORE
gravitino.entity.store = {{ .Values.entity.store | default "relational" }}
gravitino.entity.store.maxTransactionSkewTimeMs = {{ .Values.entity.maxTransactionSkewTimeMs }}
gravitino.entity.store.deleteAfterTimeMs = {{ (.Values.entity.deleteAfterTimeMs | default 604800000) | int }}
gravitino.entity.store.versionRetentionCount = {{ .Values.entity.versionRetentionCount }}
gravitino.entity.store.relational = {{ .Values.entity.relationalBackend | default "JDBCBackend" }}
gravitino.entity.store.relational.jdbcUrl = {{ if .Values.mysql.enabled }}jdbc:mysql://{{ .Release.Name }}-mysql:3306/{{ .Values.mysql.auth.database }}{{ else }}{{ .Values.entity.jdbcUrl }}{{ end }}
gravitino.entity.store.relational.jdbcDriver = {{ if .Values.mysql.enabled }}com.mysql.cj.jdbc.Driver{{ else }}{{ .Values.entity.jdbcDriver }}{{ end }}
gravitino.entity.store.relational.jdbcUser = {{ if .Values.mysql.enabled }}{{ .Values.mysql.auth.username }}{{ else }}{{ .Values.entity.jdbcUser }}{{ end }}
gravitino.entity.store.relational.jdbcPassword = {{ if .Values.mysql.enabled }}{{ .Values.mysql.auth.password }}{{ else }}{{ .Values.entity.jdbcPassword }}{{ end }}
gravitino.entity.store.relational.storagePath = {{ .Values.entity.storagePath }}

# THE CONFIGURATION FOR Gravitino CATALOG
gravitino.catalog.cache.evictionIntervalMs = {{ if .Values.catalog.evictionIntervalMs }}{{ .Values.catalog.evictionIntervalMs }}{{ else }}3600000{{ end }}

# THE CONFIGURATION FOR Gravitino Entity Cache
gravitino.cache.enabled = {{ .Values.cache.enabled | default true }}
gravitino.cache.maxEntries = {{ .Values.cache.maxEntries | default 10000 }}
gravitino.cache.expireTimeInMs = {{ (.Values.cache.expireTimeInMs | default 3600000) | int }}
gravitino.cache.enableStats = {{ .Values.cache.enableStats | default false }}
gravitino.cache.enableWeigher = {{ .Values.cache.enableWeigher | default true }}
gravitino.cache.implementation = {{ .Values.cache.implementation | default "caffeine" }}

# THE CONFIGURATION FOR authorization
gravitino.authorization.enable = {{ .Values.authorization.enable }}
gravitino.authorization.serviceAdmins = {{ .Values.authorization.serviceAdmins }}
gravitino.authenticators = {{ .Values.authenticators }}
gravitino.authenticator.oauth.serviceAudience = {{ .Values.authenticator.oauth.serviceAudience }}
gravitino.authenticator.oauth.defaultSignKey = {{ .Values.authenticator.oauth.defaultSignKey }}
gravitino.authenticator.oauth.serverUri = {{ .Values.authenticator.oauth.serverUri }}
gravitino.authenticator.oauth.tokenPath = {{ .Values.authenticator.oauth.tokenPath }}

gravitino.authenticator.oauth.provider = {{ .Values.authenticator.oauth.provider }}
gravitino.authenticator.oauth.clientId = {{ .Values.authenticator.oauth.clientId }}
gravitino.authenticator.oauth.authority = {{ .Values.authenticator.oauth.authority }}
gravitino.authenticator.oauth.scope = {{ .Values.authenticator.oauth.scope }}
gravitino.authenticator.oauth.jwksUri = {{ .Values.authenticator.oauth.jwksUri }}
gravitino.authenticator.oauth.tokenValidatorClass = {{ .Values.authenticator.oauth.tokenValidatorClass }}
gravitino.authenticator.oauth.principalFields = {{ .Values.authenticator.oauth.principalFields }}

# THE CONFIGURATION FOR AUXILIARY SERVICE
gravitino.auxService.names = {{ .Values.auxService.names | default "iceberg-rest" }}
gravitino.iceberg-rest.classpath = {{ .Values.icebergRest.classpath | default "iceberg-rest-server/libs, iceberg-rest-server/conf"  }}
gravitino.iceberg-rest.host = {{ .Values.icebergRest.host | default "0.0.0.0" }}
gravitino.iceberg-rest.httpPort = {{ .Values.icebergRest.httpPort | default 9001 }}
gravitino.iceberg-rest.catalog-backend = {{ .Values.icebergRest.catalogBackend | default "memory" }}
gravitino.iceberg-rest.warehouse = {{ .Values.icebergRest.warehouse | default "/tmp/" }}
{{- if .Values.icebergRest.uri }}
gravitino.iceberg-rest.uri = {{ .Values.icebergRest.uri }}
{{- end }}
{{- if .Values.icebergRest.catalogBackendName }}
gravitino.iceberg-rest.catalog-backend-name = {{ .Values.icebergRest.catalogBackendName }}
{{- end }}
{{- if .Values.icebergRest.ioImpl }}
gravitino.iceberg-rest.io-impl = {{ .Values.icebergRest.ioImpl }}
{{- end }}
{{- if .Values.icebergRest.credentialProviders }}
gravitino.iceberg-rest.credential-providers = {{ .Values.icebergRest.credentialProviders }}
{{- end }}

{{- if .Values.icebergRest.jdbc }}
# JDBC catalog backend
gravitino.iceberg-rest.jdbc-user = {{.Values.icebergRest.jdbc.user }}
gravitino.iceberg-rest.jdbc-password = {{.Values.icebergRest.jdbc.password }}
gravitino.iceberg-rest.jdbc-driver = {{.Values.icebergRest.jdbc.driver }}
{{- if .Values.icebergRest.jdbc.initialize }}
gravitino.iceberg-rest.jdbc-initialize = {{.Values.icebergRest.jdbc.initialize }}
{{- end }}
{{- end }}

{{- if .Values.icebergRest.s3 }}
# S3 storage
gravitino.iceberg-rest.s3-access-key-id = {{.Values.icebergRest.s3.accessKeyId }}
gravitino.iceberg-rest.s3-secret-access-key = {{.Values.icebergRest.s3.secretAccessKey }}
{{- if .Values.icebergRest.s3.endpoint }}
gravitino.iceberg-rest.s3-endpoint = {{.Values.icebergRest.s3.endpoint }}
{{- end }}
{{- if .Values.icebergRest.s3.region }}
gravitino.iceberg-rest.s3-region = {{.Values.icebergRest.s3.region }}
{{- end }}
{{- if .Values.icebergRest.s3.pathStyleAccess }}
gravitino.iceberg-rest.s3-path-style-access = {{.Values.icebergRest.s3.pathStyleAccess }}
{{- end }}
{{- if .Values.icebergRest.s3.roleArn }}
gravitino.iceberg-rest.s3-role-arn = {{.Values.icebergRest.s3.roleArn }}
{{- end }}
{{- if .Values.icebergRest.s3.externalId }}
gravitino.iceberg-rest.s3-external-id = {{.Values.icebergRest.s3.externalId }}
{{- end }}
{{- if .Values.icebergRest.s3.tokenServiceEndpoint }}
gravitino.iceberg-rest.s3-token-service-endpoint = {{.Values.icebergRest.s3.tokenServiceEndpoint }}
{{- end }}
{{- end }}

{{- if .Values.icebergRest.oss }}
# OSS storage
gravitino.iceberg-rest.oss-access-key-id = {{.Values.icebergRest.oss.accessKeyId }}
gravitino.iceberg-rest.oss-secret-access-key = {{.Values.icebergRest.oss.secretAccessKey }}
{{- if .Values.icebergRest.oss.endpoint }}
gravitino.iceberg-rest.oss-endpoint = {{.Values.icebergRest.oss.endpoint }}
{{- end }}
{{- if .Values.icebergRest.oss.region }}
gravitino.iceberg-rest.oss-region = {{.Values.icebergRest.oss.region }}
{{- end }}
{{- if .Values.icebergRest.oss.roleArn }}
gravitino.iceberg-rest.oss-role-arn = {{.Values.icebergRest.oss.roleArn }}
{{- end }}
{{- if .Values.icebergRest.oss.externalId }}
gravitino.iceberg-rest.oss-external-id = {{.Values.icebergRest.oss.externalId }}
{{- end }}
{{- end }}

{{- if .Values.icebergRest.azure }}
# Azure storage
gravitino.iceberg-rest.azure-storage-account-name = {{.Values.icebergRest.azure.storageAccountName }}
gravitino.iceberg-rest.azure-storage-account-key = {{.Values.icebergRest.azure.storageAccountKey }}
gravitino.iceberg-rest.azure-tenant-id = {{.Values.icebergRest.azure.tenantId }}
gravitino.iceberg-rest.azure-client-id = {{.Values.icebergRest.azure.clientId }}
gravitino.iceberg-rest.azure-client-secret = {{.Values.icebergRest.azure.clientSecret }}
{{- end }}

{{- if .Values.icebergRest.catalogConfigProvider }}
gravitino.iceberg-rest.catalog-config-provider = {{ .Values.icebergRest.catalogConfigProvider }}
{{- end }}
{{- if .Values.icebergRest.dynamicConfigProvider }}
gravitino.iceberg-rest.gravitino-uri = {{ .Values.icebergRest.dynamicConfigProvider.uri }}
gravitino.iceberg-rest.gravitino-metalake = {{ .Values.icebergRest.dynamicConfigProvider.metalake }}
gravitino.iceberg-rest.default-catalog-name = {{ .Values.icebergRest.dynamicConfigProvider.defaultCatalogName }}
{{- end }}

# Audit log configuration
gravitino.audit.enabled = {{ .Values.audit.enabled }}
gravitino.audit.writer.className = {{ if (and .Values.audit .Values.audit.writer .Values.audit.writer.className) }}{{ .Values.audit.writer.className }}{{ else }}org.apache.gravitino.audit.FileAuditWriter{{- end }}
gravitino.audit.formatter.className = {{ if (and .Values.audit .Values.audit.formatter .Values.audit.formatter.className) }}{{ .Values.audit.formatter.className }}{{ else }}org.apache.gravitino.audit.SimpleFormatter{{- end }}
gravitino.audit.writer.file.fileName = {{ .Values.audit.writer.file.fileName }}
gravitino.audit.writer.file.flushIntervalSecs = {{ .Values.audit.writer.file.flushIntervalSecs }}
gravitino.audit.writer.file.append = {{ .Values.audit.writer.file.append }}

# Metrics configuration
gravitino.metrics.timeSlidingWindowSecs	= {{ .Values.metrics.timeSlidingWindowSecs }}

{{- if .Values.visibleConfigs }}
gravitino.server.visibleConfigs = {{ .Values.visibleConfigs }}
{{- range $key, $val := .Values.visibleConfigsItems }}
{{ $key }} = {{ tpl $val $ }}
{{- end }}
{{- end }}
{{- range $key, $val := .Values.additionalConfigItems }}
{{ $key }} = {{ tpl $val $ }}
{{- end }}