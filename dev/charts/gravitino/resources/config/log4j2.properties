#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

status = {{ .Values.log4j2Properties.status | default "warn" }}

# Log files location
property.basePath = {{ .Values.log4j2Properties.basePath | default "${sys:gravitino.log.path}" }}
property.serverName = {{ .Values.log4j2Properties.serverName | default "${sys:gravitino.server.name}" }}

# RollingFileAppender name, pattern, path and rollover policy
appender.rolling.type = {{ .Values.log4j2Properties.type | default "RollingFile" }}
appender.rolling.name = {{ .Values.log4j2Properties.name | default "fileLogger" }}
appender.rolling.fileName = {{ .Values.log4j2Properties.fileName | default "${basePath}/${serverName}.log" }}
appender.rolling.filePattern = {{ .Values.log4j2Properties.filePattern | default "${basePath}/${serverName}_%d{yyyyMMdd}.log.gz" }}
appender.rolling.layout.type = {{ .Values.log4j2Properties.layoutType | default "PatternLayout" }}
appender.rolling.layout.pattern = {{ .Values.log4j2Properties.layoutPattern | default "%d{yyyy-MM-dd HH:mm:ss.SSS} %level [%t] [%l] - %msg%n" }}
appender.rolling.policies.type = {{ .Values.log4j2Properties.policiesType | default "Policies" }}

# RollingFileAppender rotation policy
appender.rolling.policies.size.type = {{ .Values.log4j2Properties.policiesSizeType | default "SizeBasedTriggeringPolicy" }}
appender.rolling.policies.size.size = {{ .Values.log4j2Properties.policiesSizeSize | default "10MB" }}
appender.rolling.policies.time.type = {{ .Values.log4j2Properties.policiesTimeType | default "TimeBasedTriggeringPolicy" }}
appender.rolling.policies.time.interval = {{ .Values.log4j2Properties.policiesTimeInterval | default 1 }}
appender.rolling.policies.time.modulate = {{ .Values.log4j2Properties.policiesTimeModulate | default true }}
appender.rolling.strategy.type = {{ .Values.log4j2Properties.strategyType | default "DefaultRolloverStrategy" }}
appender.rolling.strategy.delete.type = {{ .Values.log4j2Properties.strategyDeleteType | default "Delete" }}
appender.rolling.strategy.delete.basePath = {{ .Values.log4j2Properties.strategyDeleteBasePath | default "${basePath}" }}
appender.rolling.strategy.delete.maxDepth = {{ .Values.log4j2Properties.strategyDeleteMaxDepth | default 10 }}
appender.rolling.strategy.delete.ifLastModified.type = {{ .Values.log4j2Properties.strategyDeleteIfLastModifiedType | default "IfLastModified" }}

# Delete all files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = {{ .Values.log4j2Properties.strategyDeleteIfLastModifiedAge | default "30d" }}

# Configure root logger
rootLogger.level = {{ .Values.log4j2Properties.rootLoggerLevel | default "info" }}
rootLogger.appenderRef.rolling.ref = {{ .Values.log4j2Properties.rollingRef | default "fileLogger" }}

{{- range $key, $val := .Values.additionalLog4j2Properties }}
{{ $key }} = {{ tpl $val $ }}
{{- end }}