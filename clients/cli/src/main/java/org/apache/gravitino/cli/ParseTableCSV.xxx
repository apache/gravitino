/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.apache.commons.csv.CSVFormat;
import org.apache.commons.csv.CSVParser;
import org.apache.commons.csv.CSVRecord;

import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ParseTableCSV {

    public HashMap<> parse(String cvsFilename) {
        HashMap<String, List<String>> columns = new HashMap<>();

        columnCSV.put("Datatype", new ArrayList<>());
        columnCSV.put("Comment", new ArrayList<>());
        columnCSV.put("Nullable", new ArrayList<>());
        columnCSV.put("Auto Increment", new ArrayList<>());
        columnCSV.put("Default value", new ArrayList<>());
        columnCSV.put("Default value type", new ArrayList<>());

        try (
            FileReader reader = new FileReader(cvsFilename);
            CSVParser csvParser = new CSVParser(reader, CSVFormat.DEFAULT
                .withHeader("Datatype", "Comment", "Nullable", "AutoIncrement", "DefaultValue", "DefaultType")
                .withIgnoreHeaderCase()
                .withTrim())
        ) {
            for (CSVRecord line : csvParser) {
                columnCSV.get("Datatype").add(record.get("Datatype"));
                columnCSV.get("Comment").add(record.get("Comment"));
                columnCSV.get("Nullable").add(record.get("Nullable"));
                columnCSV.get("AutoIncrement").add(record.get("AutoIncrement"));
                columnCSV.get("DefaultValue").add(record.get("DefaultValue"));
                columnCSV.get("DefaultType").add(record.get("DefaultType"));
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        return columns;
    }
}
