--
-- Licensed to the Apache Software Foundation (ASF) under one
-- or more contributor license agreements.  See the NOTICE file--
--  distributed with this work for additional information
-- regarding copyright ownership.  The ASF licenses this file
-- to you under the Apache License, Version 2.0 (the
-- "License"). You may not use this file except in compliance
-- with the License.  You may obtain a copy of the License at
--
--  http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing,
-- software distributed under the License is distributed on an
-- "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-- KIND, either express or implied.  See the License for the
-- specific language governing permissions and limitations
-- under the License.
--

CREATE TABLE IF NOT EXISTS metalake_meta (
                                             metalake_id BIGINT NOT NULL,
                                             metalake_name VARCHAR(128) NOT NULL,
    metalake_comment VARCHAR(256) DEFAULT '',
    properties TEXT DEFAULT NULL,
    audit_info TEXT NOT NULL,
    schema_version TEXT NOT NULL,
    current_version INT NOT NULL DEFAULT 1,
    last_version INT NOT NULL DEFAULT 1,
    deleted_at BIGINT NOT NULL DEFAULT 0,
    PRIMARY KEY (metalake_id),
    UNIQUE (metalake_name, deleted_at)
    );

CREATE TABLE IF NOT EXISTS catalog_meta (
                                            catalog_id BIGINT NOT NULL,
                                            catalog_name VARCHAR(128) NOT NULL,
    metalake_id BIGINT NOT NULL,
    type VARCHAR(64) NOT NULL,
    provider VARCHAR(64) NOT NULL,
    catalog_comment VARCHAR(256) DEFAULT '',
    properties TEXT DEFAULT NULL,
    audit_info TEXT NOT NULL,
    current_version INT NOT NULL DEFAULT 1,
    last_version INT NOT NULL DEFAULT 1,
    deleted_at BIGINT NOT NULL DEFAULT 0,
    PRIMARY KEY (catalog_id),
    UNIQUE (metalake_id, catalog_name, deleted_at)
    );

CREATE TABLE IF NOT EXISTS schema_meta (
                                           schema_id BIGINT NOT NULL,
                                           schema_name VARCHAR(128) NOT NULL,
    metalake_id BIGINT NOT NULL,
    catalog_id BIGINT NOT NULL,
    schema_comment VARCHAR(256) DEFAULT '',
    properties TEXT DEFAULT NULL,
    audit_info TEXT NOT NULL,
    current_version INT NOT NULL DEFAULT 1,
    last_version INT NOT NULL DEFAULT 1,
    deleted_at BIGINT NOT NULL DEFAULT 0,
    PRIMARY KEY (schema_id),
    UNIQUE (catalog_id, schema_name, deleted_at)
    );

CREATE INDEX IF NOT EXISTS idx_metalake_id ON schema_meta (metalake_id);

CREATE TABLE IF NOT EXISTS table_meta (
                                          table_id BIGINT NOT NULL,
                                          table_name VARCHAR(128) NOT NULL,
    metalake_id BIGINT NOT NULL,
    catalog_id BIGINT NOT NULL,
    schema_id BIGINT NOT NULL,
    audit_info TEXT NOT NULL,
    current_version INT NOT NULL DEFAULT 1,
    last_version INT NOT NULL DEFAULT 1,
    deleted_at BIGINT NOT NULL DEFAULT 0,
    PRIMARY KEY (table_id),
    UNIQUE (schema_id, table_name, deleted_at)
    );

CREATE INDEX IF NOT EXISTS idx_metalake_id ON table_meta (metalake_id);
CREATE INDEX IF NOT EXISTS idx_catalog_id ON table_meta (catalog_id);

CREATE TABLE IF NOT EXISTS fileset_meta (
                                            fileset_id BIGINT NOT NULL,
                                            fileset_name VARCHAR(128) NOT NULL,
    metalake_id BIGINT NOT NULL,
    catalog_id BIGINT NOT NULL,
    schema_id BIGINT NOT NULL,
    type VARCHAR(64) NOT NULL,
    audit_info TEXT NOT NULL,
    current_version INT NOT NULL DEFAULT 1,
    last_version INT NOT NULL DEFAULT 1,
    deleted_at BIGINT NOT NULL DEFAULT 0,
    PRIMARY KEY (fileset_id),
    UNIQUE (schema_id, fileset_name, deleted_at)
    );

CREATE INDEX IF NOT EXISTS idx_metalake_id ON fileset_meta (metalake_id);
CREATE INDEX IF NOT EXISTS idx_catalog_id ON fileset_meta (catalog_id);


CREATE TABLE IF NOT EXISTS fileset_version_info (
                                                    id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                                    metalake_id BIGINT NOT NULL,
                                                    catalog_id BIGINT NOT NULL,
                                                    schema_id BIGINT NOT NULL,
                                                    fileset_id BIGINT NOT NULL,
                                                    version INT NOT NULL,
                                                    fileset_comment VARCHAR(256) DEFAULT '',
    properties TEXT DEFAULT NULL,
    storage_location TEXT NOT NULL,
    deleted_at BIGINT NOT NULL DEFAULT 0,
    PRIMARY KEY (id),
    UNIQUE (fileset_id, version, deleted_at)
    );

CREATE INDEX IF NOT EXISTS idx_metalake_id ON fileset_version_info (metalake_id);
CREATE INDEX IF NOT EXISTS idx_catalog_id ON fileset_version_info (catalog_id);
CREATE INDEX IF NOT EXISTS idx_schema_id ON fileset_version_info (schema_id);

CREATE TABLE IF NOT EXISTS topic_meta (
                                          topic_id BIGINT NOT NULL,
                                          topic_name VARCHAR(128) NOT NULL,
    metalake_id BIGINT NOT NULL,
    catalog_id BIGINT NOT NULL,
    schema_id BIGINT NOT NULL,
    comment VARCHAR(256) DEFAULT '',
    properties TEXT DEFAULT NULL,
    audit_info TEXT NOT NULL,
    current_version INT NOT NULL DEFAULT 1,
    last_version INT NOT NULL DEFAULT 1,
    deleted_at BIGINT NOT NULL DEFAULT 0,
    PRIMARY KEY (topic_id),
    UNIQUE (schema_id, topic_name, deleted_at)
    );

CREATE INDEX IF NOT EXISTS idx_metalake_id ON topic_meta (metalake_id);
CREATE INDEX IF NOT EXISTS idx_catalog_id ON topic_meta (catalog_id);


CREATE TABLE IF NOT EXISTS user_meta (
                                         user_id BIGINT NOT NULL,
                                         user_name VARCHAR(128) NOT NULL,
    metalake_id BIGINT NOT NULL,
    audit_info TEXT NOT NULL,
    current_version INT NOT NULL DEFAULT 1,
    last_version INT NOT NULL DEFAULT 1,
    deleted_at BIGINT NOT NULL DEFAULT 0,
    PRIMARY KEY (user_id),
    UNIQUE (metalake_id, user_name, deleted_at)
    );

CREATE TABLE IF NOT EXISTS role_meta (
                                         role_id BIGINT NOT NULL,
                                         role_name VARCHAR(128) NOT NULL,
    metalake_id BIGINT NOT NULL,
    properties TEXT DEFAULT NULL,
    audit_info TEXT NOT NULL,
    current_version INT NOT NULL DEFAULT 1,
    last_version INT NOT NULL DEFAULT 1,
    deleted_at BIGINT NOT NULL DEFAULT 0,
    PRIMARY KEY (role_id),
    UNIQUE (metalake_id, role_name, deleted_at)
    );


CREATE TABLE IF NOT EXISTS role_meta_securable_object (
                                                          id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                                          role_id BIGINT NOT NULL,
                                                          metadata_object_id BIGINT NOT NULL,
                                                          type  VARCHAR(128) NOT NULL,
    privilege_names VARCHAR(256) NOT NULL,
    privilege_conditions VARCHAR(256) NOT NULL,
    current_version INT NOT NULL DEFAULT 1,
    last_version INT NOT NULL DEFAULT 1,
    deleted_at BIGINT NOT NULL DEFAULT 0,
    PRIMARY KEY (id)
    );

CREATE INDEX IF NOT EXISTS idx_role_id ON role_meta_securable_object (role_id);

CREATE TABLE IF NOT EXISTS user_role_rel (
                                             id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY,
                                             user_id BIGINT NOT NULL,
                                             role_id BIGINT NOT NULL,
                                             audit_info TEXT NOT NULL,
                                             current_version INT NOT NULL DEFAULT 1,
                                             last_version INT NOT NULL DEFAULT 1,
                                             deleted_at BIGINT NOT NULL DEFAULT 0,
                                             PRIMARY KEY (id),
    UNIQUE (user_id, role_id, deleted_at)
    );

CREATE INDEX IF NOT EXISTS idx_user_id ON user_role_rel (user_id);

CREATE TABLE IF NOT EXISTS group_meta (
                                          group_id BIGINT NOT NULL,
                                          group_name VARCHAR(128) NOT NULL,
    metalake_id BIGINT NOT NULL,
    audit_info TEXT NOT NULL,
    current_version INT NOT NULL DEFAULT 1,
    last_version INT NOT NULL DEFAULT 1,
    deleted_at BIGINT NOT NULL DEFAULT 0,
    PRIMARY KEY (group_id),
    UNIQUE (metalake_id, group_name, deleted_at)
    );

CREATE TABLE IF NOT EXISTS group_role_rel (
                                              id BIGSERIAL NOT NULL,
                                              group_id BIGINT NOT NULL,
                                              role_id BIGINT NOT NULL,
                                              audit_info TEXT NOT NULL,
                                              current_version INT NOT NULL DEFAULT 1,
                                              last_version INT NOT NULL DEFAULT 1,
                                              deleted_at BIGINT NOT NULL DEFAULT 0,
                                              PRIMARY KEY (id),
    UNIQUE (group_id, role_id, deleted_at));

CREATE INDEX IF NOT EXISTS idx_group_id ON group_role_rel (group_id);


CREATE TABLE IF NOT EXISTS tag_meta (
                                        tag_id BIGINT NOT NULL,
                                        tag_name VARCHAR(128) NOT NULL,
    metalake_id BIGINT NOT NULL,
    tag_comment VARCHAR(256) DEFAULT '',
    properties TEXT DEFAULT NULL,
    audit_info TEXT NOT NULL,
    current_version INT NOT NULL DEFAULT 1,
    last_version INT NOT NULL DEFAULT 1,
    deleted_at BIGINT NOT NULL DEFAULT 0,
    PRIMARY KEY (tag_id),
    UNIQUE (metalake_id, tag_name, deleted_at)
    );

CREATE TABLE IF NOT EXISTS tag_relation_meta (
                                                 id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                                 tag_id BIGINT NOT NULL,
                                                 metadata_object_id BIGINT NOT NULL,
                                                 metadata_object_type VARCHAR(64) NOT NULL,
    audit_info TEXT NOT NULL,
    current_version INT NOT NULL DEFAULT 1,
    last_version INT NOT NULL DEFAULT 1,
    deleted_at BIGINT NOT NULL DEFAULT 0,
    PRIMARY KEY (id),
    UNIQUE (tag_id, metadata_object_id, metadata_object_type, deleted_at)
    );

CREATE INDEX IF NOT EXISTS idx_tag_id ON tag_relation_meta (tag_id);
CREATE INDEX IF NOT EXISTS idx_metadata_object_id ON tag_relation_meta (metadata_object_id);

CREATE TABLE IF NOT EXISTS owner_meta (
                                          id BIGINT GENERATED BY DEFAULT AS IDENTITY,
                                          metalake_id BIGINT NOT NULL,
                                          owner_id BIGINT NOT NULL,
                                          owner_type VARCHAR(64) NOT NULL,
    metadata_object_id BIGINT NOT NULL,
    metadata_object_type VARCHAR(64) NOT NULL,
    audit_info TEXT NOT NULL,
    current_version INT NOT NULL DEFAULT 1,
    last_version INT NOT NULL DEFAULT 1,
    deleted_at BIGINT NOT NULL DEFAULT 0,
    PRIMARY KEY (id),
    UNIQUE (owner_id, metadata_object_id, metadata_object_type, deleted_at)
    );

CREATE INDEX IF NOT EXISTS idx_owner_id ON owner_meta (owner_id);
CREATE INDEX IF NOT EXISTS idx_metadata_object_id ON owner_meta (metadata_object_id);
