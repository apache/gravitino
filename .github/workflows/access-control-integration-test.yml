#name: Access Control Integration Test
#
## Controls when the workflow will run
#on:
#  # Triggers the workflow on push or pull request events but only for the "main" branch
#  push:
#    branches: [ "main", "branch-*" ]
#  pull_request:
#    branches: [ "main", "branch-*" ]
#
#concurrency:
#  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
#  cancel-in-progress: true
#
#jobs:
#  changes:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: dorny/paths-filter@v2
#        id: filter
#        with:
#          filters: |
#            source_changes:
#              - api/**
#              - authorizations/**
#              - catalogs/**
#              - clients/client-java/**
#              - clients/client-java-runtime/**
#              - common/**
#              - core/**
#              - integration-test-common/**
#              - server/**
#              - server-common/**
#    outputs:
#      source_changes: ${{ steps.filter.outputs.source_changes }}
#
#  # Integration test for AMD64 architecture
#  test-amd64-arch:
#    needs: changes
#    if: needs.changes.outputs.source_changes == 'true'
#    runs-on: ubuntu-latest
#    timeout-minutes: 60
#    strategy:
#      matrix:
#        # Integration test for AMD64 architecture
#        architecture: [linux/amd64]
#        java-version: [ 17 ]
#        test-mode: [ embedded, deploy ]
#        include:
#          - test-mode: 'embedded'
#            backend: 'h2'
#          - test-mode: 'deploy'
#            backend: 'mysql'
#
#    env:
#      PLATFORM: ${{ matrix.architecture }}
#    steps:
#      - uses: actions/checkout@v3
#
#      - uses: actions/setup-java@v4
#        with:
#          java-version: ${{ matrix.java-version }}
#          distribution: 'temurin'
#          cache: 'gradle'
#
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#
#      - name: Check required command
#        run: |
#          dev/ci/check_commands.sh
#
#      - name: Package Gravitino
#        if : ${{ matrix.test-mode == 'deploy' }}
#        run: |
#          ./gradlew compileDistribution -x test -PjdkVersion=${{ matrix.java-version }}
#
#      - name: Free up disk space
#        run: |
#          dev/ci/util_free_space.sh
#
#      - name: Authorization Integration Test (JDK${{ matrix.java-version }}-${{ matrix.test-mode }}-${{ matrix.backend }})
#        id: integrationTest
#        run: |
#          ./gradlew -PskipTests -PtestMode=${{ matrix.test-mode }} -PjdbcBackend=${{ matrix.backend }} -PjdkVersion=${{ matrix.java-version }} -PskipDockerTests=false :authorizations:authorization-ranger:test --tests "org.apache.gravitino.authorization.ranger.integration.test.**"
#
#      - name: Upload integrate tests reports
#        uses: actions/upload-artifact@v3
#        if: ${{ (failure() && steps.integrationTest.outcome == 'failure') || contains(github.event.pull_request.labels.*.name, 'upload log') }}
#        with:
#          name: authorizations-integrate-test-reports-${{ matrix.java-version }}
#          path: |
#            build/reports
#            distribution/package/logs/gravitino-server.out
#            distribution/package/logs/gravitino-server.log
