name: Integration Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main", "branch-*" ]
  pull_request:
    branches: [ "main", "branch-*" ]

concurrency:
  group: ${{ github.worklfow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_requests' }}

jobs:
  changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            source_changes:
              - .github/**
              - api/**
              - bin/**
              - catalogs/**
              - clients/**
              - common/**
              - conf/**
              - core/**
              - dev/**
              - gradle/**
              - integration-test/**
              - meta/**
              - server/**
              - server-common/**
              - trino-connector/**
              - web/**
              - build.gradle.kts
              - gradle.properties
              - gradlew
              - setting.gradle.kts
    outputs:
      source_changes: ${{ steps.filter.outputs.source_changes }}

  # Integration test for AMD64 architecture
  test-amd64-arch:
    needs: changes
    if: needs.changes.outputs.source_changes == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        architecture: [linux/amd64]
    env:
      DOCKER_RUN_NAME: hive-amd64
      PLATFORM: ${{ matrix.architecture }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-java@v3
        with:
          java-version: '8'
          distribution: 'temurin'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Cache Docker images
        id: cache
        uses: actions/cache@v2
        with:
          path: |
            docker-gravitino-ci-hive.tar
            docker-gravitino-ci-trino.tar
            docker-mysql.tar
            docker-postgres.tar
          key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile') }}

      - name: Load Docker images
        run: |
          if [ -f "docker-gravitino-ci-hive.tar" ]; then
            docker load -i docker-gravitino-ci-hive.tar
          else
            docker pull datastrato/gravitino-ci-hive:0.1.6
            docker save datastrato/gravitino-ci-hive:0.1.6 -o docker-gravitino-ci-hive.tar
          fi

          if [ -f "docker-gravitino-ci-trino.tar" ]; then
            docker load -i docker-gravitino-ci-trino.tar
          else
            docker pull datastrato/gravitino-ci-trino:0.1.0
            docker save datastrato/gravitino-ci-trino:0.1.0 -o docker-gravitino-ci-trino.tar
          fi
          
          if [ -f "docker-mysql.tar" ]; then
            docker load -i docker-mysql.tar
          else
            docker pull mysql:8.0
            docker save mysql:8.0 -o docker-mysql.tar
          fi
          
          if [ -f "docker-postgres.tar" ]; then
            docker load -i docker-postgres.tar
          else
            docker pull postgres:9.6.12
            docker save postgres:9.6.12 -o docker-postgres.tar
          fi

      - name: Cache Maven dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Package Gravitino
        run: |
          ./gradlew build -x test
          ./gradlew compileDistribution -x test

      - name: Setup debug Github Action
        if: ${{ contains(github.event.pull_request.labels.*.name, 'debug action') }}
        uses: csexton/debugger-action@master

      - name: Integration Test
        id: integrationTest
        run: |
          ./gradlew test --rerun-tasks -PskipTests -PtestMode=embedded
          ./gradlew test --rerun-tasks -PskipTests -PtestMode=deploy

      - name: Upload integrate tests reports
        uses: actions/upload-artifact@v3
        if: ${{ failure() && steps.integrationTest.outcome == 'failure' }}
        with:
          name: integrate test reports 
          path: |
            build/reports
            integration-test/build/integration-test.log
            distribution/package/logs/gravitino-server.out
            distribution/package/logs/gravitino-server.log
