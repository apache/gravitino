; Licensed to the Apache Software Foundation (ASF) under one
; or more contributor license agreements.  See the NOTICE file
; distributed with this work for additional information
; regarding copyright ownership.  The ASF licenses this file
; to you under the Apache License, Version 2.0 (the
; "License"); you may not use this file except in compliance
; with the License.  You may obtain a copy of the License at
;
;  http://www.apache.org/licenses/LICENSE-2.0
;
; Unless required by applicable law or agreed to in writing,
; software distributed under the License is distributed on an
; "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
; KIND, either express or implied.  See the License for the
; specific language governing permissions and limitations
; under the License.

; The model file of jcasbin defines a permission model used to describe the permissions
; of users, groups, and roles for a single metadata type.

; "r" represents the parameters passed when making a request to jCasbin.
; "sub" represents a roleId, userId, or groupCodeId.
; The combination of `sub` and `metalakeId` uniquely identifies a user, role, or group.
; "metadataType" represents the type of metadata.
; "metadataId" represents the id of metadata
; "act" represents the privilege that needs to be authorized or whether it is an OWNER.
[request_definition]
r = sub, metadataType, metadataId, act

; "p" represents a permission policy.
; "eft" stands for "effect" which can be either "allow" or "deny".
[policy_definition]
p = sub, metadataType, metadataId, act, eft

; "g" represents the membership or ownership relationship of users, groups, or roles.
[role_definition]
g = _, _

; "e" represents the effect of the "eft",eft performs a logical combination judgment on the matching results
; of Matchers.
; e = some(where(p.eft == allow)): This statement means that if the matching strategy result p.eft has the result
; of (some) allow
; e = some(where (p.eft == allow)) && !some(where (p.eft == deny)): The logical meaning of this example combination
; is: if there is a strategy that matches the result of allow and no strategy that matches the result of deny,
; the result is true. In other words, it is true when the matching strategies are all allow. If there is any deny,
; both are false (more simply, when allow and deny exist at the same time, deny takes precedence).
;
; see more in https://casbin.org/zh/docs/how-it-works/#effect
[policy_effect]
e = some(where (p.eft == allow)) && !some(where (p.eft == deny))

; "m" represents the matching rules of the model
[matchers]
m = g(r.sub, p.sub) && r.metadataId == p.metadataId && r.metadataType == p.metadataType && ( p.act == "OWNER" || r.act == p.act )

