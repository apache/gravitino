#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

---

paths:

  /metalakes/{metalake}/permissions/users/{user}/grant:
    parameters:
      - $ref: "./openapi.yaml#/components/parameters/metalake"
      - $ref: "./openapi.yaml#/components/parameters/user"

    put:
      tags:
        - access control
      summary: Grant roles to a user
      operationId: grantRoleToUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleGrantRequest"
            examples:
              RoleGrantRequest:
                $ref: "#/components/examples/RoleGrantRequest"

      responses:
        "200":
          description: Returns the granted user object
          content:
            application/vnd.gravitino.v1+json:
              schema:
                $ref: "#/components/responses/UserResponse"
              examples:
                UserResponse:
                  $ref: "#/components/examples/UserResponse"

        "5xx":
          $ref: "./openapi.yaml#/components/responses/ServerErrorResponse"

    /metalakes/{metalake}/permissions/groups/{group}/grant:
      parameters:
        - $ref: "./openapi.yaml#/components/parameters/metalake"
        - $ref: "./openapi.yaml#/components/parameters/group"

      put:
        tags:
          - access control
        summary: Grant roles to a group
        operationId: grantRoleToGroup
        requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleGrantRequest"
              examples:
                RoleGrantRequest:
                  $ref: "#/components/examples/RoleGrantRequest"

        responses:
          "200":
            description: Returns the granted group object
            content:
              application/vnd.gravitino.v1+json:
                schema:
                  $ref: "./groups.yaml#/components/responses/GroupResponse"
                examples:
                  GroupResponse:
                    $ref: "./groups.yaml#/examples/GroupResponse""

          "5xx":
            $ref: "./openapi.yaml#/components/responses/ServerErrorResponse"


components:

  schemas:
    User:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the user
        roles:
          type: array
          items:
            type: string
          description: The roles of the user

    UserAddRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: The name of the user

  responses:
    UserResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          description: Status code of the response
          enum:
            - 0
        user:
          $ref: "#/components/schemas/User"

  examples:
    UserAddRequest:
      value: {
        "name": "user1",
      }

    UserResponse:
      value: {
        "code": 0,
        "user": {
          "name": "user1",
          "roles": [],
        }
      }

    UserAlreadyExistsException:
      value: {
        "code": 1004,
        "type": "UserAlreadyExistsException",
        "message": "User already exists",
        "stack": [
          "org.apache.gravitino.exceptions.UserAlreadyExistsException: User already exists: user1"
        ]
      }

    NoSuchUserException:
      value: {
        "code": 1003,
        "type": "NoSuchUserException",
        "message": "User does not exist",
        "stack": [
          "org.apache.gravitino.exceptions.NoSuchUserException: User does not exist",
          "..."
        ]
      }